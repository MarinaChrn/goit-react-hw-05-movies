{"version":3,"file":"static/js/635.ad241afd.chunk.js","mappings":"uRAEAA,EAAAA,EAAAA,SAAAA,QAAuB,+BACvB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,WAAMC,GAAN,yFACVH,EAAAA,EAAAA,IAAA,oCAAuCC,GAAW,CAACG,OAAQD,EAAWC,SAD5D,uBACxBC,EADwB,EACxBA,KADwB,kBAExBA,GAFwB,2CAAH,sDAKnBC,EAAiB,mCAAG,WAAMC,EAAIJ,GAAV,yFACRH,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,oBAAkCN,GAAW,CAACG,OAAQD,EAAWC,SADzD,uBACtBC,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,wDAUjBG,EAAkB,mCAAG,WAAMC,EAAON,GAAb,yFACTH,EAAAA,EAAAA,IAAA,8BAAiCS,EAAjC,oBAAkDR,GAAW,CAACG,OAAQD,EAAWC,SADxE,uBACvBC,EADuB,EACvBA,KADuB,kBAEvBA,GAFuB,2CAAH,wDAKlBK,EAAe,mCAAG,WAAMD,EAAON,GAAb,yFACNH,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,4BAA6CR,EAA7C,uBAA2E,CAACG,OAAQD,EAAWC,SADzF,uBACpBC,EADoB,EACpBA,KADoB,kBAEpBA,EAAKM,MAFe,2CAAH,uD,gKCvBfC,EAAgBC,EAAAA,GAAAA,QAAH,yFCAbC,EAAcD,EAAAA,GAAAA,IAAH,mGAOXE,EAAiBF,EAAAA,GAAAA,IAAH,+DAKdG,EAAaH,EAAAA,GAAAA,IAAH,yF,SCZVI,EAAe,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAC1B,OACI,UAACJ,EAAD,YACI,SAACC,EAAD,CAAgBI,IAAG,6CAAwCD,EAAME,cAAgBC,IAAI,MACrF,UAACL,EAAD,YACI,wBAAKE,EAAMI,QACX,uBAAIJ,EAAMK,iBAIzB,EC+BD,EArCiB,WACb,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAqBJ,EAAAA,EAAAA,UAAS,MAArBK,GAAT,eACOC,GAAYC,EAAAA,EAAAA,MAAZD,SAyBP,OAvBAE,EAAAA,EAAAA,YAAU,WACN,IAAM7B,EAAa,IAAI8B,gBADZ,wCAEX,oGAEQL,GAAa,GACbC,EAAS,MAHjB,UAIoCnB,EAAAA,EAAAA,IAAgBoB,EAAU3B,GAJ9D,OAIc+B,EAJd,OAKQR,EAAaQ,EAAcC,MAAM,EAAG,KAL5C,gDAOQN,EAAS,EAAD,IAPhB,yBASQD,GAAa,GATrB,6EAFW,sBAgBX,OAhBW,mCAcXQ,GAEO,WACHjC,EAAWkC,OACd,CACJ,GAAC,CAACP,IAEHQ,QAAQC,IAAId,IAGR,UAACb,EAAD,WACMe,IAAa,sCACM,IAAnBF,EAAUe,SAAeb,GAAaF,EAAUgB,KAAK,SAAAC,GAAE,OAAI,SAACzB,EAAD,CAAcC,MAAOwB,GAASA,EAAGnC,GAArC,MAGpE,C","sources":["api.js","components/CastFilm.styled.js","components/CastFilmCard.styled.js","components/CastFilmCard.jsx","components/CastFilm.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL=\"https://api.themoviedb.org/3\";\nconst KEY_API = 'c67a48adb3404d662a84d5e73bbe6a15';\n\nexport const fetchTrendingMovies = async(controller)=> {\n    const {data} = await axios.get(`/trending/all/day?api_key=${KEY_API}`, {signal: controller.signal});\n    return data ;\n}\n\nexport const fetchDetailsMovie = async(id, controller)=> {\n    const {data} = await axios.get(`/movie/${id}?api_key=${KEY_API}`, {signal: controller.signal});\n    return data ;\n}\n\nexport const fetchCastMovie = async(id, controller)=> {\n    const {data} = await axios.get(`/movie/${id}/credits?api_key=${KEY_API}`, {signal: controller.signal});\n    return data ;\n}\n\nexport const fetchSearchByValue = async(value, controller)=> {\n    const {data} = await axios.get(`/search/movie?query=${value}&api_key=${KEY_API}`, {signal: controller.signal});\n    return data ;\n}\n\nexport const fetchCastOfFilm = async(value, controller)=> {\n    const {data} = await axios.get(`/movie/${value}/credits?api_key=${KEY_API}&page=1&per_page=20`, {signal: controller.signal});\n    return data.cast ;\n}","import styled from \"styled-components\";\n\nexport const StyledSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n`","import styled from \"styled-components\";\n\nexport const LayoutActor = styled.div`\n    display: flex;\n    gap: 40px;\n    width: 400px;\n    height: 300px;\n`\n\nexport const StyledImgActor = styled.img`\n    width: 200px;\n    height: 300px;\n`\n\nexport const AboutActor = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n`","import { AboutActor, LayoutActor, StyledImgActor } from \"./CastFilmCard.styled\"\n\nexport const CastFilmCard = ({actor}) => {\n    return (\n        <LayoutActor>\n            <StyledImgActor src={`https://image.tmdb.org/t/p/original${actor.profile_path}`} alt=\"\"/>\n            <AboutActor>\n                <h3>{actor.name}</h3>\n                <p>{actor.character}</p>\n            </AboutActor>\n        </LayoutActor>\n    )\n}","import { fetchCastOfFilm } from \"api\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { StyledSection } from \"./CastFilm.styled\";\nimport { CastFilmCard } from \"./CastFilmCard\";\n\nconst CastFilm = () =>{\n    const [castMovie, setCastMovie] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [, setError] = useState(null);\n    const {moviesId} = useParams();\n\n    useEffect(()=> {\n        const controller = new AbortController();\n        async function fetchSearch () {    \n            try {\n                setIsLoading(true);\n                setError(null);\n                const fetchedSearch = await fetchCastOfFilm(moviesId, controller)\n                setCastMovie(fetchedSearch.slice(0, 10))\n            } catch(error) {\n                setError(error)\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        fetchSearch ()\n\n        return(()=> {\n            controller.abort()\n        })\n    },[moviesId])\n\n    console.log(castMovie)\n\n    return (\n        <StyledSection>\n            {(isLoading)&&(<p>Loading...</p>)}\n            {(castMovie.length!==0)&&(!isLoading)&&(castMovie.map( el => <CastFilmCard actor={el} key={el.id}/>))}\n        </StyledSection>\n    )\n}\n\nexport default CastFilm;"],"names":["axios","KEY_API","fetchTrendingMovies","controller","signal","data","fetchDetailsMovie","id","fetchSearchByValue","value","fetchCastOfFilm","cast","StyledSection","styled","LayoutActor","StyledImgActor","AboutActor","CastFilmCard","actor","src","profile_path","alt","name","character","useState","castMovie","setCastMovie","isLoading","setIsLoading","setError","moviesId","useParams","useEffect","AbortController","fetchedSearch","slice","fetchSearch","abort","console","log","length","map","el"],"sourceRoot":""}