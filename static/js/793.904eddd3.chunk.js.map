{"version":3,"file":"static/js/793.904eddd3.chunk.js","mappings":"uOAEAA,EAAAA,EAAAA,SAAAA,QAAuB,8BACvB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,WAAMC,GAAN,yFACVH,EAAAA,EAAAA,IAAA,sCAAyCC,GAAW,CAACG,OAAQD,EAAWC,SAD9D,uBACxBC,EADwB,EACxBA,KADwB,kBAExBA,GAFwB,2CAAH,sDAKnBC,EAAiB,mCAAG,WAAMC,EAAIJ,GAAV,yFACRH,EAAAA,EAAAA,IAAA,mBAAsBO,EAAtB,oBAAoCN,GAAW,CAACG,OAAQD,EAAWC,SAD3D,uBACtBC,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH,uD,2ICRjBG,EAAe,SAAC,GAAc,IAAbC,EAAY,EAAZA,QAC1B,OACI,yBACI,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAQF,IAAKI,KAAG,EAAxC,wBAA8DC,IAAhBH,EAAQI,MAAmBJ,EAAQI,MAAMJ,EAAQK,SAG1G,ECNYC,EAAY,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACvB,OACI,wBAC0B,IAApBA,EAAWC,QACTD,EAAWE,KAAI,SAAAC,GAAO,OAAI,SAACX,EAAD,CAAcC,QAASU,GAAcA,EAAQZ,GAAjD,KAIrC,E,SCJYa,EAAO,WAChB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACN,IAAMzB,EAAa,IAAI0B,gBADb,wCAEV,oGAEQJ,GAAa,GACbE,EAAS,MAHjB,UAIoCzB,EAAAA,EAAAA,IAAoBC,GAJxD,OAIc2B,EAJd,OAKQP,GAAS,OAAIO,EAAcC,UALnC,gDAOQJ,EAAS,EAAD,IAPhB,yBASQF,GAAa,GATrB,6EAFU,sBAgBV,OAhBU,mCAcVO,GAEO,kBAAK7B,EAAW8B,OAAhB,CACV,GAAC,KAIG,4BACKT,IAAa,uCACZA,IAAgBE,IAAW,SAACX,EAAD,CAAWC,WAAYM,MAE3D,C","sources":["api.js","components/ListFilmItem.jsx","components/ListFilms.jsx","pages/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL=\"https://api.themoviedb.org/\";\nconst KEY_API = 'c67a48adb3404d662a84d5e73bbe6a15';\n\nexport const fetchTrendingMovies = async(controller)=> {\n    const {data} = await axios.get(`/3/trending/all/day?api_key=${KEY_API}`, {signal: controller.signal});\n    return data ;\n}\n\nexport const fetchDetailsMovie = async(id, controller)=> {\n    const {data} = await axios.get(`/3/movie/${id}?api_key=${KEY_API}`, {signal: controller.signal});\n    return data ;\n}\n\nexport const fetchCastMovie = async(id, controller)=> {\n    const {data} = await axios.get(`/3/movie/${id}/credits?api_key=${KEY_API}`, {signal: controller.signal});\n    return data ;\n}\n\n","import { NavLink } from \"react-router-dom\";\n\nexport const ListFilmItem = ({filmInf})=> {\n    return (\n        <li>\n            <NavLink to={`/movies/${filmInf.id}`}end>{`${(filmInf.title!==undefined)?filmInf.title:filmInf.name}`}</NavLink>\n        </li>\n    )\n}","import { ListFilmItem } from \"./ListFilmItem\"\n\nexport const ListFilms = ({arrayFilms}) => {\n    return (\n        <ul>\n            {(arrayFilms.length!==0)&&(\n                arrayFilms.map(element => <ListFilmItem filmInf={element} key={element.id}/>)\n            )}\n        </ul>\n    )\n}","\nimport {fetchTrendingMovies} from \"api\";\nimport { ListFilms } from \"components/ListFilms\";\nimport { useEffect } from \"react\";\n\nimport { useState } from \"react\";\nexport const Home = () => {\n    const [trend, setTrend] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(()=>{\n        const controller = new AbortController();\n        async function fetchSearch () {    \n            try {\n                setIsLoading(true);\n                setError(null);\n                const fetchedSearch = await fetchTrendingMovies(controller)\n                setTrend([...fetchedSearch.results])\n            } catch(errors) {\n                setError(errors)\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        fetchSearch ()\n\n        return(()=> controller.abort())\n    },[])\n\n    return (\n        \n        (<main>\n            {(isLoading)&&(<p>Loading...</p>)}\n            {(!isLoading) && (!error) && (<ListFilms arrayFilms={trend}/>)}\n        </main>)\n    )}\n"],"names":["axios","KEY_API","fetchTrendingMovies","controller","signal","data","fetchDetailsMovie","id","ListFilmItem","filmInf","to","end","undefined","title","name","ListFilms","arrayFilms","length","map","element","Home","useState","trend","setTrend","isLoading","setIsLoading","error","setError","useEffect","AbortController","fetchedSearch","results","fetchSearch","abort"],"sourceRoot":""}