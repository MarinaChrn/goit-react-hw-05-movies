{"version":3,"file":"static/js/413.d243ab77.chunk.js","mappings":"iNAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,2H,SCAJE,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,MACnC,OACI,yBACI,SAACL,EAAD,CAAMM,GAAE,kBAAaF,EAAQG,IAAMC,KAAG,EAAEH,MAAOA,EAA/C,wBAA2EI,IAAhBL,EAAQM,MAAmBN,EAAQM,MAAMN,EAAQO,SAGvH,ECPYC,EAAOX,EAAAA,GAAAA,GAAH,kLCcjB,EAXkB,SAAC,GAAkB,IAAjBY,EAAgB,EAAhBA,WACVC,GAAWC,EAAAA,EAAAA,MACjB,OACI,SAACH,EAAD,UAC0B,IAApBC,EAAWG,QACTH,EAAWI,KAAI,SAAAC,GAAO,OAAI,SAACf,EAAD,CAAcC,QAASc,EAA0Bb,MAAO,CAAEc,KAAML,IAA3BI,EAAQX,GAAjD,KAIrC,C,uKCZYa,EAAanB,EAAAA,GAAAA,KAAH,4FAMVoB,EAAcpB,EAAAA,GAAAA,MAAH,wLAUXqB,EAAerB,EAAAA,GAAAA,OAAH,0Z,SCczB,EA5BkB,SAAC,GAA4B,IAA3BsB,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,SAC7B,GAA0BC,EAAAA,EAAAA,UAASF,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAiB,SAACC,GACpBA,EAAEC,iBACiB,IAAfJ,EAAMV,SACNQ,EAASE,EAAMK,eACfJ,EAAS,IAEhB,EAUD,OACI,UAACP,EAAD,CAAYI,SAAU,SAACK,GAAMD,EAAeC,EAAG,EAA/C,WACI,SAACR,EAAD,CAAaW,KAAK,OAAON,MAAOA,EAAOO,YAAY,sBAAsBC,SAAU,SAAAL,GAAC,OAVrE,SAACA,GACF,MAAjBA,EAAEM,OAAOT,OAAcC,EAASE,EAAEM,OAAOT,MAC7C,CAQ6FU,CAAeP,EAAjB,KACpF,SAACP,EAAD,CAAcU,KAAK,SAASK,QAAS,SAAAR,GAAC,EAAtC,sBAIX,E,QCkBD,EA1Ce,WAAO,IAAD,EACjB,GAAwCS,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0Bf,EAAAA,EAAAA,UAAS,IAAnC,eAAOgB,EAAP,KAAcC,EAAd,KACA,GAAkCjB,EAAAA,EAAAA,WAAS,GAA3C,eAAOkB,EAAP,KAAkBC,EAAlB,KACA,GAAoBnB,EAAAA,EAAAA,UAAS,MAArBoB,GAAR,eACMC,EAAS,UAAGP,EAAaQ,IAAI,gBAApB,QAAgC,GA0B/C,OApBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,IAAIC,gBADZ,wCAEX,oGAEQN,GAAa,GACbC,EAAS,MAHjB,UAIoCM,EAAAA,EAAAA,IAAmBL,EAAWG,GAJlE,OAIcG,EAJd,OAKQV,GAAS,OAAIU,EAAcC,UALnC,gDAOQR,EAAS,EAAD,IAPhB,yBAUQD,GAAa,GAVrB,6EAFW,sBAiBX,OAjBW,mCAeXU,GAEO,kBAAKL,EAAWM,OAAhB,CACV,GAAC,CAACT,KAGC,4BACMH,IAAa,uCACZA,IACF,iCAAE,SAAC,EAAD,CAAWpB,YAAauB,EAAWtB,SA7B5B,SAACgC,GAEfhB,EAD6B,KAAVgB,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAElD,KA2BO,SAACC,EAAA,EAAD,CAAW5C,WAAY4B,OACN,IAAfA,EAAMzB,QAAiC,IAAnB8B,EAAU9B,SAAc,sEAA8C8B,EAA9C,yBAGzD,C","sources":["components/ListFilmItem.styled.js","components/ListFilmItem.jsx","components/ListFilms.styled.js","components/ListFilms.jsx","components/Searchbox.styled.js","components/Searchbox.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Link = styled(NavLink)`\n    text-decoration: none;\n    color: black;\n    &:hover, &:focus {\n        color: red;\n    }\n`","import { Link } from \"./ListFilmItem.styled\";\nimport PropTypes from \"prop-types\"\n\nexport const ListFilmItem = ({filmInf, state})=> {\n    return (\n        <li>\n            <Link to={`/movies/${filmInf.id}`} end  state={state}>{`${(filmInf.title!==undefined)?filmInf.title:filmInf.name}`}</Link>\n        </li>\n    )\n}\n\nListFilmItem.propTypes = {\n    filmInf: PropTypes.object,\n    state: PropTypes.object.isRequired,\n}","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    list-style: disc;\n    margin-left: 20px;\n    margin-top: 20px;\n    padding: 0px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n`","import { useLocation } from \"react-router-dom\";\nimport {ListFilmItem} from \"./ListFilmItem\";\nimport { List } from \"./ListFilms.styled\";\nimport PropTypes from \"prop-types\";\n\nconst ListFilms = ({arrayFilms}) => {\n    const location = useLocation();\n    return (\n        <List>\n            {(arrayFilms.length!==0)&&(\n                arrayFilms.map(element => <ListFilmItem filmInf={element} key={element.id} state={{ from: location }}/>)\n            )}\n        </List>\n    )\n}\n\nexport default ListFilms;\nListFilms.propTypes = {\n    arrayFilms: PropTypes.array.isRequired,\n}","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n    display:flex;\n    align-items: center;\n    margin-top: 40px;\n`\n\nexport const StyledInput = styled.input`\n    padding: 8px;\n    font-size: 16px;\n    border-radius:0px;\n    border: 2px solid #ababab;\n    &:hover, &:focus {\n        border-color: #a6cdff;\n    }\n`\n\nexport const StyledButton = styled.button`\n    padding: 8px 10px;\n    font-size: 16px;\n    background-color:transparent;\n    cursor: pointer;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n    border: none;\n    background-color: #ababab;\n    &:hover, &:focus {\n        background-color: #a6cdff;\n    }\n`","import { useState } from \"react\";\nimport { StyledButton, StyledForm, StyledInput } from \"./Searchbox.styled\";\nimport PropTypes from \"prop-types\";\n\nconst Searchbox = ({valueParams, onSubmit})=> {\n    const [value, setValue] = useState(valueParams)\n\n    const onHandleSubmit = (e)=> {\n        e.preventDefault();\n        if (value.length!==0) {\n            onSubmit(value.toLowerCase());\n            setValue('');\n        }\n    }\n\n    const onHandleChange = (e) => {\n        (e.target.value!==\" \")&&setValue(e.target.value)\n    }\n\n    const onHandleClear = (e) =>  {\n        \n    }\n\n    return (\n        <StyledForm onSubmit={(e)=> {onHandleSubmit(e)}}>\n            <StyledInput type=\"text\" value={value} placeholder=\"Write title of film\" onChange={e=>onHandleChange(e)}/>\n            <StyledButton type=\"submit\" onClick={e=>onHandleClear(e)}>Search</StyledButton>\n        </StyledForm>\n        \n    )\n}\n\nexport default Searchbox;\nSearchbox.propTypes = {\n    valueParams: PropTypes.string.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n}","import { fetchSearchByValue } from \"api\";\nimport ListFilms from \"components/ListFilms\";\nimport Searchbox from \"components/Searchbox\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [films, setFilms] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [,setError] = useState(null);\n    const filmValue = searchParams.get(\"query\") ?? \"\";\n    const newSearch = (query) => {\n        const nextParams = query !== \"\" ? { query } : {};\n        setSearchParams(nextParams);\n    }\n    \n    useEffect(()=> {\n        const controller = new AbortController();\n        async function fetchSearch () {    \n            try {\n                setIsLoading(true);\n                setError(null);\n                const fetchedSearch = await fetchSearchByValue(filmValue, controller)\n                setFilms([...fetchedSearch.results])\n            } catch(errors) {\n                setError(errors)\n                \n            } finally {\n                setIsLoading(false);\n            }\n        }\n        fetchSearch ()\n\n        return(()=> controller.abort())\n    },[filmValue])\n\n    return (\n        <main>\n            {(isLoading)&&(<p>Loading...</p>)}\n            {(!isLoading)&&\n            (<><Searchbox valueParams={filmValue} onSubmit={newSearch}/>\n            <ListFilms arrayFilms={films}/></>)}\n            {(films.length===0)&&(filmValue.length!==0)&&(<p>Sorry, we couldn't find films with title: {filmValue}, try another one</p>)}\n        </main>\n    )\n}\n\nexport default Movies;"],"names":["Link","styled","NavLink","ListFilmItem","filmInf","state","to","id","end","undefined","title","name","List","arrayFilms","location","useLocation","length","map","element","from","StyledForm","StyledInput","StyledButton","valueParams","onSubmit","useState","value","setValue","onHandleSubmit","e","preventDefault","toLowerCase","type","placeholder","onChange","target","onHandleChange","onClick","useSearchParams","searchParams","setSearchParams","films","setFilms","isLoading","setIsLoading","setError","filmValue","get","useEffect","controller","AbortController","fetchSearchByValue","fetchedSearch","results","fetchSearch","abort","query","ListFilms"],"sourceRoot":""}